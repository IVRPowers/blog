<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code on Blog</title>
    <link>http://blog.ivrpowers.com/tags/code/</link>
    <description>Recent content in Code on Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 26 Oct 2017 10:45:24 +0200</lastBuildDate>
    
	<atom:link href="http://blog.ivrpowers.com/tags/code/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How it Works our Datachannel with VideoRTC.js</title>
      <link>http://blog.ivrpowers.com/post/coding/datachannel-videortc/</link>
      <pubDate>Thu, 26 Oct 2017 10:45:24 +0200</pubDate>
      
      <guid>http://blog.ivrpowers.com/post/coding/datachannel-videortc/</guid>
      <description>Photo Source: Interactive Powers, Pexels. Creative Commons In this post we will show you how it works our Datachannel with VideoRTC.js and how to use it for a specific purpose.
Introduction First of all you need to know the modules in which we currently have available the Datachannel: These are the Videocall and the SPLIT. In this example we will use the first one, though the operation would be the same in both.</description>
    </item>
    
    <item>
      <title>How to Add a Webphone Button in your Website</title>
      <link>http://blog.ivrpowers.com/post/coding/webphonebutton-website/</link>
      <pubDate>Wed, 11 Oct 2017 11:30:24 +0200</pubDate>
      
      <guid>http://blog.ivrpowers.com/post/coding/webphonebutton-website/</guid>
      <description>Photo Source: Interactive Powers, Pexels. Creative Commons In this post we will show you how to add a Webphone button in your website using our customizable webcall widget.
Step one: Installation To install the Webphone Button in your web­page you need to download our webcall widget webcall_widget_noflash.zip and uncompress it in the directory of your website.
To insert it, you first need to add the CSS Stylesheet file to your webpage.</description>
    </item>
    
    <item>
      <title>How to Build your Own Videoconference Service</title>
      <link>http://blog.ivrpowers.com/post/coding/videortc-build-videoconference/</link>
      <pubDate>Wed, 04 Oct 2017 10:45:24 +0200</pubDate>
      
      <guid>http://blog.ivrpowers.com/post/coding/videortc-build-videoconference/</guid>
      <description>Photo Source: Interactive Powers, Pexels. Creative Commons Today we bring you this interesting article on How to build your own videoconference service based on HTML5 technology by using our API Framework with VideoRTC.js.
Step one: Setting up the basic structure As we have explained in previous posts, first of all it is important that you include dependency within your project or web page.
&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;videortc.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;  You can insert a minimized version if you prefer so:</description>
    </item>
    
    <item>
      <title>How to Build a Mobile Video Application (WebRTC)</title>
      <link>http://blog.ivrpowers.com/post/coding/videortc-build-mobile-app/</link>
      <pubDate>Mon, 11 Sep 2017 10:45:24 +0200</pubDate>
      
      <guid>http://blog.ivrpowers.com/post/coding/videortc-build-mobile-app/</guid>
      <description>Photo Source: Interactive Powers, Pexels. Creative Commons In this post we will show you how to build a video call service in your mobile by using the Ionic Framework 2 and VideoRTC.js.
Step 1: Setting up the basic structure Firstly, you need to install a project Ionic in your system. If you don’t have it, you can download and follow the official guide from the Ionic Framework 2 web site.</description>
    </item>
    
    <item>
      <title>How to Build a Videocall Service (WebRTC)</title>
      <link>http://blog.ivrpowers.com/post/coding/videortc-build-videocall/</link>
      <pubDate>Fri, 01 Sep 2017 11:59:22 +0200</pubDate>
      
      <guid>http://blog.ivrpowers.com/post/coding/videortc-build-videocall/</guid>
      <description>Photo Source: Interactive Powers, Pexels. Creative Commons In this post we will show you how to build your videocall service based on HTML5 technology by using our API Framework with VideoRTC.js.
Step 1: Setting up the basic structure Firstly, you will need to include dependency within your project or web page:
&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;videortc.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;  You can insert a minimized version if you prefer so:
&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;videortc.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;  Next, we connect with the video gateway server:</description>
    </item>
    
  </channel>
</rss>