<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Videocall on Blog</title>
    <link>http://blog.ivrpowers.com/tags/videocall/</link>
    <description>Recent content in Videocall on Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 18 Oct 2017 12:58:21 +0200</lastBuildDate>
    
	<atom:link href="http://blog.ivrpowers.com/tags/videocall/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>It&#39;s time for companies to use Web and Mobile RTC Applications</title>
      <link>http://blog.ivrpowers.com/post/news/linkedin-article6/</link>
      <pubDate>Wed, 18 Oct 2017 12:58:21 +0200</pubDate>
      
      <guid>http://blog.ivrpowers.com/post/news/linkedin-article6/</guid>
      <description>Photo Source: Shutterstock licensed to Interactive Powers Ivan Sixto Founder, CEO, Business Development
Follow me on Linkedin
Telephone bills with voice call minutes have been reduced or even disappeared both at home and in businesses. We communicate at work writing emails, tweets, posts, notifying by Skype, Google Hangout, LinkedIn or Facebook, and get in touch with our friends via Whatsapp or Snapchat, sharing multimedia content in real time. Phone calls are no longer a relevant channel in our personal communications.</description>
    </item>
    
    <item>
      <title>How to Build your Own Videoconference Service</title>
      <link>http://blog.ivrpowers.com/post/coding/videortc-build-videoconference/</link>
      <pubDate>Wed, 04 Oct 2017 10:45:24 +0200</pubDate>
      
      <guid>http://blog.ivrpowers.com/post/coding/videortc-build-videoconference/</guid>
      <description>Photo Source: Interactive Powers, Pexels. Creative Commons Today we bring you this interesting article on How to build your own videoconference service based on HTML5 technology by using our API Framework with VideoRTC.js.
Step one: Setting up the basic structure As we have explained in previous posts, first of all it is important that you include dependency within your project or web page.
&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;videortc.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;  You can insert a minimized version if you prefer so:</description>
    </item>
    
    <item>
      <title>How to Build a Mobile Video Application (WebRTC)</title>
      <link>http://blog.ivrpowers.com/post/coding/videortc-build-mobile-app/</link>
      <pubDate>Mon, 11 Sep 2017 10:45:24 +0200</pubDate>
      
      <guid>http://blog.ivrpowers.com/post/coding/videortc-build-mobile-app/</guid>
      <description>Photo Source: Interactive Powers, Pexels. Creative Commons In this post we will show you how to build a video call service in your mobile by using the Ionic Framework 2 and VideoRTC.js.
Step 1: Setting up the basic structure Firstly, you need to install a project Ionic in your system. If you donâ€™t have it, you can download and follow the official guide from the Ionic Framework 2 web site.</description>
    </item>
    
    <item>
      <title>How to Build a Videocall Service (WebRTC)</title>
      <link>http://blog.ivrpowers.com/post/coding/videortc-build-videocall/</link>
      <pubDate>Fri, 01 Sep 2017 11:59:22 +0200</pubDate>
      
      <guid>http://blog.ivrpowers.com/post/coding/videortc-build-videocall/</guid>
      <description>Photo Source: Interactive Powers, Pexels. Creative Commons In this post we will show you how to build your videocall service based on HTML5 technology by using our API Framework with VideoRTC.js.
Step 1: Setting up the basic structure Firstly, you will need to include dependency within your project or web page:
&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;videortc.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;  You can insert a minimized version if you prefer so:
&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;videortc.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;  Next, we connect with the video gateway server:</description>
    </item>
    
  </channel>
</rss>